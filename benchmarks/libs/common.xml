<!--
 * Copyright (c) 2009 The Australian National University.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Apache License v2.0.
 * You may obtain the license at
 * 
 *    http://www.opensource.org/licenses/apache2.0.php
 -->
<project name="lib-common">
	<import file="../util.xml"/>
	<import file="libs.xml"/>

	<property name="lib-build-dir" location="libs/${lib-name}/build"/>
	<property name="lib-output-dir" location="libs/${lib-name}/dist"/>
	<property name="lib-jars" location="${lib-output-dir}/jar"/>
	<property name="lib-dat" value="${bm-output-dir}/dat"/>
	<property name="lib-downloads" location="libs/${lib-name}/downloads"/>
	<property name="lib-src-dir" location="libs/${lib-name}/src"/>
	<property name="lib-data" location="libs/${lib-name}/data"/>

	<target name="all" depends="url-source, svn-source, hg-source, git-source, pre-build, build, jar, complete"/>

	<target name="url-source" if="lib-url">
		<antcall target="check-source">
			<param name="target-dir" value="${lib-downloads}"/>
			<param name="target-url" value="${lib-url}"/>
			<param name="target-file" value="${lib-src}"/>
		</antcall>
	</target>

	<target name="svn-source" if="lib-svn-url">
		<antcall target="check-svn-source">
			<param name="target-dir" value="${lib-downloads}"/>
			<param name="svn-url" value="${lib-svn-url}"/>
			<param name="svn-revision" value="${lib-svn-revision}"/>
			<param name="target-file" value="${lib-src}"/>
		</antcall>
	</target>

	<target name="hg-source" if="lib-hg-url">
		<antcall target="check-hg-source">
			<param name="target-dir" value="${lib-downloads}"/>
			<param name="hg-url" value="${lib-hg-url}"/>
			<param name="hg-revision" value="${lib-hg-revision}"/>
			<param name="target-file" value="${lib-src}"/>
		</antcall>
	</target>

	<target name="git-source" if="lib-git-url">
		<antcall target="check-git-source">
			<param name="target-dir" value="${lib-downloads}"/>
			<param name="git-url" value="${lib-git-url}"/>
			<param name="git-commit" value="${lib-git-commit}"/>
			<param name="target-file" value="${lib-src}"/>
		</antcall>
	</target>

	<target name="pre-build" depends="clean, init, unpack"/>

	<target name="clean">
		<delete dir="${lib-output-dir}"/>
		<delete dir="${lib-build-dir}"/>
	</target>

	<target name="init" depends="clean">
		<mkdir dir="${lib-output-dir}"/>
		<mkdir dir="${lib-jars}"/>
	</target>

	<target name="unpack"/>

	<target name="build"/>

	<target name="patch">
		<patch patchfile="libs/${lib-name}/${lib-name}.patch" dir="${lib-build-dir}" strip="0" ignorewhitespace="yes"/>
	</target>

	<target name="untar">
		<mkdir dir="${lib-build-dir}"/>
		<untar src="${lib-downloads}/${lib-src}" dest="${lib-build-dir}/" compression="gzip"/>
	</target>

	<target name="unzip">
		<mkdir dir="${lib-build-dir}/"/>
		<unzip src="${lib-downloads}/${lib-src}" dest="${lib-build-dir}/"/>
	</target>

	<target name="jar"/>

	<target name="complete">
		<jar jarfile="${build.target-jar}" basedir="${lib-output-dir}" update="true"/>
	</target>
</project>
