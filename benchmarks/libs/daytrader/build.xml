<!--
 * Copyright (c) 2009 The Australian National University.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Apache License v2.0.
 * You may obtain the license at
 * 
 *    http://www.opensource.org/licenses/apache2.0.php
 -->
<project name="daytrader" default="all" basedir="../..">
    <description>daytrader application, required by tradebeans and tradesoap</description>

    <property environment="env"/>

    <property file="ant/dacapo.properties"/>

    <property name="lib-name" value="daytrader"/>

    <property name="maven-central" value="http://central.maven.org/maven2"/>
    <property name="apache-svn-url" value="http://svn.apache.org/repos/asf"/>
    <property name="java-dev-url" value="http://download.java.net/maven"/>

    <property name="lib-svn-url" value="${apache-svn-url}/geronimo/daytrader/trunk"/>
    <property name="lib-svn-revision" value="1825949"/>
    <property name="lib-version" value="svn-${lib-svn-revision}"/>
    <property name="lib-src" value="daytrader-${lib-version}-src.tar.gz"/>

    <property name="ger-version" value="3.0.1"/>
    <property name="ger-name" value="geronimo-tomcat7-minimal"/>
    <property name="ger-url" value="${apache.dl.url}/geronimo/${ger-version}"/>
    <property name="ger-bin" value="${ger-name}-${ger-version}-bin.tar.gz"/>

    <property name="ger-plugins-url" value="${apache-svn-url}/geronimo/server/tags/geronimo-${ger-version}/plugins"/>
    <property name="ger-plugins-revision" value="1822921"/>
    <property name="ger-plugins-bin" value="${ger-name}-${ger-version}-plugins.tar.gz"/>

    <property name="geronimo-jms-version" value="1.1.1"/>
    <property name="geronimo-jms-groupId" value="org/apache/geronimo/specs/geronimo-jms_1.1_spec/${geronimo-jms-version}"/>
    <property name="geronimo-jms-url" value="${maven-central}/${geronimo-jms-groupId}"/>
    <property name="geronimo-jms-bin" value="geronimo-jms_1.1_spec-${geronimo-jms-version}.jar"/>

    <property name="xbean-asm-version" value="3.11.1"/>
    <property name="xbean-asm-groupId" value="org/apache/xbean/xbean-asm-shaded/${xbean-asm-version}"/>
    <property name="xbean-asm-url" value="${maven-central}/${xbean-asm-groupId}"/>
    <property name="xbean-asm-bin" value="xbean-asm-shaded-${xbean-asm-version}.jar"/>

    <property name="servicemix-bundles-version" value="1.6.1_2"/>
    <property name="servicemix-bundles-groupId" value="org/apache/servicemix/bundles/org.apache.servicemix.bundles.dom4j/${servicemix-bundles-version}"/>
    <property name="servicemix-bundles-url" value="${maven-central}/${servicemix-bundles-groupId}"/>
    <property name="servicemix-bundles-bin" value="org.apache.servicemix.bundles.dom4j-${servicemix-bundles-version}.jar"/>


    <import file="../common.xml"/>

    <property name="dt-build" location="${lib-build-dir}/daytrader"/>
    <property name="plugins-build" location="${lib-build-dir}/plugins"/>
    <property name="launcher-build" location="${lib-build-dir}/launcher"/>
    <property name="ger-home" location="${lib-build-dir}/${ger-name}-${ger-version}"/>
    <property name="ger-repo" location="${lib-build-dir}/${ger-name}-${ger-version}/repository"/>
    <property name="ger-cli-jar" value="${ger-home}/repository/org/apache/geronimo/framework/geronimo-cli/${ger-version}/geronimo-cli-${ger-version}.jar"/>
    <property name="ger-kernel-jar" value="${ger-home}/repository/org/apache/geronimo/framework/geronimo-kernel/${ger-version}/geronimo-kernel-${ger-version}.jar"/>
    <property name="osgi-framework-util-jar" value="${ger-home}/repository/org/osgi/org.osgi.core/4.3.1/org.osgi.core-4.3.1.jar"/>
    <property name="geronimo-main-jar" value="${ger-home}/lib/geronimo-main.jar"/>

    <condition property="shell-exe" value="cmd.exe">
        <os family="windows"/>
    </condition>
    <property name="shell-exe" value="sh"/>
    <condition property="geronimo-exe" value="geronimo.bat">
        <os family="windows"/>
    </condition>
    <property name="geronimo-exe" value="geronimo"/>
    <condition property="deploy-exe" value="deploy.bat">
        <os family="windows"/>
    </condition>
    <property name="deploy-exe" value="deploy"/>
    <condition property="mvn-exe" value="mvn.bat">
        <os family="windows"/>
    </condition>
    <property name="mvn-exe" value="mvn"/>


    <target name="url-source" if="ger-url">
        <antcall target="check-source">
            <param name="target-dir" value="${lib-downloads}"/>
            <param name="target-url" value="${ger-url}"/>
            <param name="target-file" value="${ger-bin}"/>
        </antcall>
        <antcall target="check-svn-source">
            <param name="svn-url" value="${ger-plugins-url}"/>
            <param name="svn-revision" value="${ger-plugins-revision}"/>
            <param name="target-file" value="${ger-plugins-bin}"/>
            <param name="target-dir" value="${lib-downloads}"/>
        </antcall>
        <antcall target="check-source">
            <param name="target-dir" value="${lib-downloads}"/>
            <param name="target-url" value="${geronimo-jms-url}"/>
            <param name="target-file" value="${geronimo-jms-bin}"/>
        </antcall>
        <antcall target="check-source">
            <param name="target-dir" value="${lib-downloads}"/>
            <param name="target-url" value="${xbean-asm-url}"/>
            <param name="target-file" value="${xbean-asm-bin}"/>
        </antcall>
        <antcall target="check-source">
            <param name="target-dir" value="${lib-downloads}"/>
            <param name="target-url" value="${servicemix-bundles-url}"/>
            <param name="target-file" value="${servicemix-bundles-bin}"/>
        </antcall>
    </target>

    <target name="unpack">
        <untar src="${lib-downloads}/${ger-bin}" dest="${lib-build-dir}" compression="gzip"/>
        <untar src="${lib-downloads}/${ger-plugins-bin}" dest="${lib-build-dir}/plugins" compression="gzip"/>

        <patch patchfile="${lib-base}/${lib-name}/geronimo-quiet-log.patch" dir="${lib-build-dir}" ignorewhitespace="yes" strip="0" failonerror="yes"/>

        <chmod dir="${ger-home}/bin" includes="**" perm="u+x"/>
        <mkdir dir="${dt-build}"/>
        <untar src="${lib-downloads}/${lib-src}" dest="${dt-build}/" compression="gzip"/>

        <copy file="${lib-data}/stocks.txt" todir="${dt-build}/javaee6/modules/web/src/main/resources/"/>
        <copy file="${lib-data}/users.txt" todir="${dt-build}/javaee6/modules/web/src/main/resources/"/>
        <copy file="${lib-data}/workload.txt" todir="${dt-build}/javaee6/modules/web/src/main/resources/"/>

        <copy file="${lib-downloads}/${geronimo-jms-bin}" todir="${ger-repo}/${geronimo-jms-groupId}"/>
        <copy file="${lib-downloads}/${xbean-asm-bin}" todir="${ger-repo}/${xbean-asm-groupId}"/>
        <copy file="${lib-downloads}/${servicemix-bundles-bin}" todir="${ger-repo}/${servicemix-bundles-groupId}"/>

        <copy todir="${dt-build}">
            <fileset dir="libs/${lib-name}/${lib-name}" />
        </copy>
        <copy todir="${plugins-build}">
            <fileset dir="libs/${lib-name}/plugins" />
        </copy>

        <patch patchfile="${lib-base}/${lib-name}/${lib-name}.patch" dir="${lib-build-dir}" ignorewhitespace="yes" strip="0" failonerror="yes"/>

    </target>

    <target name="jar" depends="build">
        <jar destfile="${lib-jars}/${lib-name}.jar">
            <fileset dir="${launcher-build}">
                <include name="**/*.class"/>
            </fileset>
        </jar>
    </target>

    <target name="build" depends="build.init,data">
        <mkdir dir="${launcher-build}/"/>
        <javac srcdir="${lib-src-dir}" destdir="${launcher-build}" classpath="${ger-cli-jar}:${ger-kernel-jar}:${osgi-framework-util-jar}:${geronimo-main-jar}" debug="true" debuglevel="lines,vars,source"/>
    </target>

    <target name="build.init">
        <property name="mvn-home" location="${toolsdir}/apache-maven-${mvn.version}/bin"/>
        <property name="mvn" location="${mvn-home}/${mvn-exe}"/>
    </target>

    <target name="data" depends="build.init">

        <!-- build required plugins -->
        <exec executable="${mvn}" dir="${lib-build-dir}/plugins/client" failonerror="yes" failifexecutionfails="yes">
            <arg value="-Dmaven.test.skip=true"/>
        </exec>
        <exec executable="${mvn}" dir="${lib-build-dir}/plugins/cxf" failonerror="yes" failifexecutionfails="yes">
            <arg value="-Dmaven.test.skip=true"/>
        </exec>
        <exec executable="${mvn}" dir="${lib-build-dir}/plugins/axis" failonerror="yes" failifexecutionfails="yes">
            <arg value="-Dmaven.test.skip=true"/>
        </exec>

        <!-- build daytrader -->
        <exec executable="${mvn}" dir="${dt-build}">
            <env key="PATH" path="${env.PATH}:${toolsdir}/apache-maven-${mvn.version}/bin:${JAVA_HOME}/bin"/>
            <env key="GERONIMO_HOME" value="${ger-home}"/>
            <env key="MAVEN_OPTS" value="-Xms256m -Xmx512m -XX:MaxPermSize=128m"/>
            <arg value="-Dmaven.test.skip=true"/>
            <arg value="clean"/>
            <arg value="install"/>
        </exec>

        <!-- deploy daytrader to geronimo -->
        <antcall target="start-geronimo"/>

        <antcall target="deploy">
            <param name="deploy-subject" value="${plugins-build}/client/client/target/client-${ger-version}.car"/>
        </antcall>
        <antcall target="deploy">
            <param name="deploy-subject" value="${plugins-build}/client/client-deployer/target/client-deployer-${ger-version}.car"/>
        </antcall>
        <antcall target="deploy">
            <param name="deploy-subject" value="${plugins-build}/client/client-security/target/client-security-${ger-version}.car"/>
        </antcall>
        <antcall target="deploy">
            <param name="deploy-subject" value="${plugins-build}/cxf/cxf/target/cxf-${ger-version}.car"/>
        </antcall>
        <antcall target="deploy">
            <param name="deploy-subject" value="${plugins-build}/cxf/cxf-deployer/target/cxf-deployer-${ger-version}.car"/>
        </antcall>
        <antcall target="deploy">
            <param name="deploy-subject" value="${plugins-build}/cxf/cxf-ejb/target/cxf-ejb-${ger-version}.car"/>
        </antcall>
        <antcall target="deploy">
            <param name="deploy-subject" value="${plugins-build}/cxf/cxf-ejb-deployer/target/cxf-ejb-deployer-${ger-version}.car"/>
        </antcall>
        <antcall target="deploy">
            <param name="deploy-subject" value="${plugins-build}/axis/axis/target/axis-${ger-version}.car"/>
        </antcall>

        <!-- daytrader -->
        <antcall target="deploy">
            <param name="deploy-subject" value="${dt-build}/plugins/daytrader-tomcat/target/daytrader-tomcat-3.0-SNAPSHOT.car"/>
        </antcall>
        <antcall target="deploy">
            <param name="deploy-subject" value="${dt-build}/plugins/daytrader-tomcat/target/daytrader-dacapo-3.0-SNAPSHOT.car"/>
        </antcall>

        <antcall target="stop-geronimo"/>


        <!-- hack to get geronimo to correctly load RMIClassLoaderSpiImpl
             which it only seems to load from the jar that dacapo is contained in -->
        <unjar src="${lib-build-dir}/${ger-name}-${ger-version}/lib/geronimo-rmi-loader.jar" dest="${bm-output-dir}">
            <patternset>
                <include name="**org/apache/geronimo/kernel/rmi/RMIClassLoaderSpiImpl.class"/>
                <include name="**org/apache/geronimo/kernel/rmi/RMIClassLoaderSpiImpl$ClassLoaderServerAware.class"/>
            </patternset>
        </unjar>

        <copy file="${lib-data}/client.jar" todir="${ger-home}/bin"/>

        <!-- package the resulting geronimo install as a zip -->
        <zip destfile="${lib-dat}/${lib-name}.zip">
            <fileset dir="${lib-build-dir}" includes="${ger-name}-${ger-version}/**"/>
        </zip>
    </target>

    <target name="start-geronimo">

        <echo message="${ger-home}/bin/${geronimo-exe}"/>
        <exec executable="${ger-home}/bin/${geronimo-exe}" dir="${ger-home}" spawn="true">
            <env key="GERONIMO_HOME" path="${ger-home}"/>
            <env key="JAVA_HOME" path="${jdk7home}"/>
            <arg value="start"/>
            <arg value="--clean"/>
        </exec>
        <echo message="Waiting for geronimo startup..."/>
        <waitfor maxwait="30" maxwaitunit="second" checkevery="1000">
            <http url="http://localhost:8080"/>
        </waitfor>
        <echo message="Established connection..."/>
        <sleep seconds="5"/>
    </target>
    <target name="stop-geronimo">
        <exec executable="${ger-home}/bin/${geronimo-exe}" dir="${ger-home}" spawn="false">
            <env key="GERONIMO_HOME" path="${ger-home}"/>
            <env key="JAVA_HOME" path="${jdk7home}"/>
            <arg value="stop"/>
            <arg value="-u"/>
            <arg value="system"/>
            <arg value="-p"/>
            <arg value="manager"/>
            <arg value="--clean"/>
        </exec>
        <waitfor maxwait="2" maxwaitunit="minute" checkevery="1000">
            <not>
                <http url="http://localhost:8080/console"/>
            </not>
        </waitfor>
        <sleep seconds="5"/>
    </target>
    <target name="deploy">
        <exec executable="${ger-home}/bin/${deploy-exe}"  failonerror="yes">
            <env key="GERONIMO_HOME" path="${ger-home}"/>
            <env key="JAVA_HOME" path="${jdk7home}"/>
            <arg value="-u"/>
            <arg value="system"/>
            <arg value="-p"/>
            <arg value="manager"/>
            <arg value="install-plugin"/>
            <arg value="${deploy-subject}"/>
        </exec>
    </target>
    <target name="undeploy">
        <exec executable="${ger-home}/bin/${deploy-exe}" failonerror="yes">
            <env key="GERONIMO_HOME" path="${ger-home}"/>
            <arg value="-u"/>
            <arg value="system"/>
            <arg value="-p"/>
            <arg value="manager"/>
            <arg value="undeploy"/>
            <arg value="${deploy-subject}"/>
        </exec>
    </target>
</project>
