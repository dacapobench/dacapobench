#=====================================================================
#  Licensed to the Apache Software Foundation (ASF) under one or more
#  contributor license agreements.  See the NOTICE file distributed with
#  this work for additional information regarding copyright ownership.
#  The ASF licenses this file to You under the Apache License, Version 2.0
#  (the "License"); you may not use this file except in compliance with
#  the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.
#=====================================================================
# $Rev: 742745 $ $Date: 2009-02-10 08:23:53 +1100 (Tue, 10 Feb 2009) $

apache.javaSysNormal.etc                     = Etc
apache.javaSysNormal.os                      = Operating System
apache.javaSysNormal.usr                     = User
apache.javaSysNormal.vm                      = Virtual Machine
apache.jk.ajpPort.networkPort                = Network Port for AJP
apache.jk.ajpPort.networkPortExplanation     = <tt>mod_jk</tt> talks to the Geronimo web container using a protocol called AJP.  Currently, you do not have an AJP protocol listener configured for the web container.  Select a network port here, and an AJP protocol listener will be added for you.
apache.jk.ajpPort.title                      = <b>Apache mod_jk</b> -- AJP Port
apache.jk.config.logFileLocation             = <tt>mod_jk</tt> log file location
apache.jk.config.logFileLoctionExplanation   = <tt>mod_jk</tt> writes to a log file in a location you choose.  The log file location needs to be set in the Apache configuration.   Please select the location where the <tt>mod_jk</tt> log file should be written.
apache.jk.config.operatingSystem             = Operating System
apache.jk.config.operatingSystemExplanation  = The process for installing <tt>mod_jk</tt> depends on the operating system. For some, we can provide specific guidance. For others, you'll have to install <tt>mod_jk</tt> on your own.
apache.jk.config.pathToProperties            = Path to <tt>workers.properties</tt>
apache.jk.config.pathToPropertiesExplanation = <tt>mod_jk</tt> requires a file called <tt>workers.properties</tt> to specify which app servers can be contacted on which network ports, etc.   This tool will generate the contents for the <tt>workers.properties</tt> file,  but it also needs to point to this file in the Apache configuration data,  so we need to know where you plan to put this file.
apache.jk.config.title                       = <b>Apache mod_jk</b> -- Basic Configuration
apache.jk.index.frag1                        = This tool walks you through the process of configuring access to Geronimo through the Apache 2 HTTP server using the <tt>mod_jk</tt> Apache module. There are several steps needed to do this:
apache.jk.index.frag2                        = By answering a few questions here, we can give you specific guidance and generate configuration information you can use.
apache.jk.index.getStarted                   = Get Started
apache.jk.index.notes                        = </li></ul><p>Notes:</p><ul><li>Geronimo does not remember previous settings generated using this tool;you'll need to reenter all the data each time, or just paste the new information into your existing configuration files.</li>  <li>Any web applications to be exposed via Apache must be running when you run this tool, and of course must be running to be accessed from Apache.</li></ul>
apache.jk.index.severalSteps                 = <ol><li>Configure the Geronimo web container to support the AJP protocol</li><li>Install the <tt>mod_jk.so</tt> Apache module (compiling it if necessary)</li><li>Create a <tt>workers.properties</tt> configuration file to point Apache to the Geronimo AJP connector</li><li>Add Apache configuration information indicating which URLs should be sent to Geronimo and whether Apache should serve static content (leaving only dynamic content within the web application to Geronimo)</li></ol>
apache.jk.results.alreadyHasAJPListener      = This Geronimo configuration already has an AJP listener running on port {0}. Nothing further needs to be done here.
apache.jk.results.anAJPLisstnerAdded         = An AJP listener was added on port {0}.  Nothing further needs to be done here.
apache.jk.results.canActivateIt              = Once the <tt>mod_jk</tt> RPM is installed, you can activate it by
apache.jk.results.followingInfoToConfig      = The following information needs to go into your Apache Configuration.
apache.jk.results.howToActivateOthers        = adding the following line to <tt>/etc/httpd/conf/httpd.conf</tt>:</p><pre>LoadModule jk_module modules/mod_jk.so</pre> <p>Then you can start Apache by running <tt>service httpd start</tt>  (or <tt>service httpd restart</tt>).
apache.jk.results.howToActivateifOsSuSE      = editing <tt>/etc/sysconfig/apache2</tt> and adding <tt>jk</tt> to the value configured for  <tt>APACHE_MODULES</tt> and then running (as root) <tt>SuSEconfig</tt> followed by  <tt>rcapache2 start</tt> (or <tt>rcapache2 restart</tt>).
apache.jk.results.noInstructionsToInstall    = </p><p>Based on your operating system selection, I don't have specific instructions to install <tt>mod_jk</tt>.  You may be able to get a binary release from  <a href="http://www.apache.org/dist/tomcat/tomcat-connectors/jk/binaries/"> http://www.apache.org/dist/tomcat/tomcat-connectors/jk/binaries/</a>.  Otherwise, you'll have to build from source.</p><p>To enable <tt>mod_jk</tt> in Apache,  you typically need to install the <tt>.so</tt> (Linux/UNIX/Mac OS X)  or <tt>.dll</tt>  (Windows) and then add a line to the <tt>httpd.conf</tt> file like this:</p> <pre> LoadModule jk_module modules/mod_jk.so</pre> <p>Finally, start or restart Apache.</p>
apache.jk.results.saveFollowingToFile        = You've decided to save this file at <tt> {0} </tt>.  Please save the following content to that file.
apache.jk.results.saveWhereIfSuSE            = For SuSE, this should be saved to a file in the Apache conf.d dir, e.g.write this content to <tt>/etc/apache2/conf.d/geronimo-jk.conf</tt>
apache.jk.results.saveWhereOthwise           = This information should be added to the Apache configuration file.  This is often at a location such as <tt>/etc/httpd/conf/httpd.conf</tt>
apache.jk.results.step1                      = Step 1: Configure Geronimo for AJP
apache.jk.results.step2                      = Step 2: Install <tt>mod_jk</tt>
apache.jk.results.step2_installUsingRPM      = On {0}, you can install <tt>mod_jk</tt> using an RPM.  This does not activate it in Apache,but it at least installs the binary in the right location.  To install, find the following RPM on your install media and run a command like this\uff1a
apache.jk.results.step3                      = Step 3: Create a <tt>workers.properties</tt> file
apache.jk.results.step4                      = Step 4: Apache Configuration<h2>
apache.jk.results.step5                      = Step 5: Restart Apache
apache.jk.results.step5Content               = With those steps completed, Apache should be ready to go!  Start Geronimo and restart Apache and try accessing a Geronimo web application through an Apache URL.  If there are any problems, check the Apache error log, and the mod_jk error log (at <tt>{0}</tt>).
apache.jk.results.summary                    = This page lists the things you must do to enable <tt>mod_jk</tt> in Apache and configure it to talk to Geronimo.
apache.jk.results.title                      = <b>Apache mod_jk</b> -- Configuration Results
apache.jk.webApps.dynamicPaths               = Dynamic Paths
apache.jk.webApps.select                     = <p>For each web application <i>currently running</i> in Geronimo, select:</p><dl>  <dt><b>Through Apache</b></dt>  <dd>Whether the web application should be exposed through Apache</dd>  <dt><b>Static Content</b></dt>  <dd>Whether Apache should serve static content for the web application  (instead of all    content being handled by Geronimo)</dd>  <dt><b>Dynamic Paths</b></dt> <dd>If Apache is serving static content, which URL paths should be passed to Geronimo       (e.g. <tt>/servlet/*</tt> or <tt>*.jsp</tt>)</dd></dl>
apache.jk.webApps.staticContent              = Static Content
apache.jk.webApps.throughApache              = Through Apache
apache.jk.webApps.title                      = <b>Apache mod_jk</b> -- Web App Selection
apache.jk.webApps.webApplication             = Web Application

ca.caDetails.summary                                = This screen shows the details of CA's certificate and keypair.  <i>Highest Serial Number</i> shows the highest of serial number of any certificate issued by this CA.  <i>Certificate Text</i> shows the CA's certificate in base64 encoded form.  This text can be used by the certificate requestors to designate this CA as a trusted CA in their software.
ca.caDetails.title                                  = Certification Authority Details
ca.certReqDetails.summary                           = This screen shows the details of the Certificate Signing Request (CSR) and allows you to input the validity period and signature algorithm for the certificate to be issued.  The certificate serial number is automatically generated by incrementing the serial number of the last certificate issued.   The next screen will allow you to review & confirm these details and issue a certificate. 
ca.certReqDetails.title                             = <b>Issue New Certificate</b> - Step 2: Review Request and enter Certificate details
ca.common.CSRText                                   = CSR Text
ca.common.Division_BusinessUnit                     = Division/Business Unit
ca.common.aliasForCAKeypair                         = Alias for CA's keypair
ca.common.backToCAHome                              = Back to CA home
ca.common.base64EncodedCertText                     = Base64 encoded Certificate Text
ca.common.certAuthorityIdentity                     = Certification Authority's Identity
ca.common.certRequestorDetails                      = Certificate Requestor Details
ca.common.certRequests                              = Certificate Requests
ca.common.certSerialNo                              = Certificate Serial Number.
ca.common.certSerialNumber                          = Certificate Serial Number
ca.common.certificateDetails                        = Certificate Details
ca.common.city_Locality                             = City/Locality
ca.common.commonName                                = Common Name
ca.common.company_Organization                      = Company/Organization
ca.common.countryCode                               = Country Code
ca.common.criticalExt                               = critical ext
ca.common.detailsOfCert                             = Details of the Certificate to be issued
ca.common.fingerPrints                              = Finger prints
ca.common.highestSerialNumber                       = Highest Serial Number
ca.common.issueNewCert                              = Issue New Certificate
ca.common.issuer                                    = Issuer
ca.common.keyAlgorithm                              = Key Algorithm
ca.common.keyDetails                                = Key Details
ca.common.keySize                                   = Key Size
ca.common.lockCA                                    = Lock CA
ca.common.noRequests                                = There are no requests.
ca.common.nonCriticalExt                            = non-critical ext
ca.common.processCSR                                = Process CSR
ca.common.publicKey                                 = Public Key
ca.common.publicKeyAlg                              = Public Key Alg
ca.common.reviewCADetails                           = Review CA Details
ca.common.reviewClientCertDetails                   = Review Client Cert Details
ca.common.serialNumber                              = Serial Number
ca.common.setupCertAuthority                        = Setup Certification Authority
ca.common.signatureAlg                              = Signature Alg
ca.common.signatureAlgorithm                        = Signature Algorithm
ca.common.state_Province                            = State/Province
ca.common.subject                                   = Subject
ca.common.title                                     = View Certificate
ca.common.unlockCA                                  = Unlock CA
ca.common.unlockCertAuthority                       = Unlock Certification Authority
ca.common.validFrom                                 = Valid From
ca.common.validFromDate                             = Valid From Date
ca.common.validTo                                   = Valid To
ca.common.validToDate                               = Valid To Date
ca.common.viewCADetails                             = View CA Details
ca.common.viewIssuedCert                            = View Issued Certificate
ca.confirmCA.summary                                = This screen lets you review the CA details entered in the previous screen.  If you need to modify any information shown here, please go back to the previous screen.  Upon clicking the <i>Setup Certification Authority</i> button, a keypair and a self-signed certificate will be generated and stored in a keystore.  CA's certificate serial number is stored in a text file and the number is incremented each time a CSR is processed by the CA.
ca.confirmCA.title                                  = <b>Setup Certification Authority</b> - Step 2: Review and Confirm CA details
ca.confirmCertReq.approveCSR                        = Approve CSR
ca.confirmCertReq.confirmCertRequest                = Confirm Certificate Request
ca.confirmCertReq.rejectCSR                         = Reject CSR
ca.confirmCertReq.summary                           = This screen shows the details of the Certificate Signing Request (CSR) and allows you to approve the request. Once the request is approved, it will be considered for issue of a certificate.
ca.confirmClientCert.issueCert                      = Issue Certificate
ca.confirmClientCert.summary                        = This screen shows the CSR details and the certificate details entered in the previous screen.  Upon clicking the <i>Issue Certificate</i> button, a certificate will be issued and stored.  The next screen will show the details of the certificate issued.
ca.confirmClientCert.title                          = <b>Issue New Certificate</b> - Step 3: Confirm and Issue Certificate
ca.index.CAFunctionsAccessed                        = CA functions can be accessed using the links provided below.
ca.index.CAInitialized                              = CA has been initialized.
ca.index.CALocked                                   = But, the CA is locked.  Please unlock the CA to access CA functions.
ca.index.CANotInitialized                           = CA is not running or the CA may not have been initialized.  Please initialize the CA using the link provided below.
ca.index.publishCACert                              = Publish CA Certificate
ca.index.requestsToBeFulfilled                      = Requests to be fulfilled
ca.index.requestsToBeVerified                       = Requests to be verified
ca.index.title                                      = This portlet allows you to setup a Certification Authority (CA) and issue certificates in reply to Certificate Signing Requests (CSRs).   <i>Setup Certification Authority</i> function allows to initialize the CA by providing CA Identity details,   algorithm parameters for CA's key pair and self-signed certificate and a password to protect the CA's private key. This password is to be used to unlock the CA to access CA functions. Once the CA is initialized, CSRs can be processed using <i>Issue New Certificate</i> function.  Previously issued certificates can be viewed using <i>View Issued Certificate</i> function.
ca.listRequestsIssue.CertRequestsAwaiting           = Certificate Requests awaiting fulfillment
ca.listRequestsIssue.CertRequestsAwaitingExp        = This screen shows the certificate requests waiting to be fulfilled.
ca.listRequestsVerify.certRequestsAwaitingVerify    = Certificate Requests awaiting verification
ca.listRequestsVerify.certRequestsAwaitingVerifyExp = This screen shows the certificate requests waiting for verification.
ca.processCSR.pastePkcs10here                       = ...paste pkcs10 encoded certificate request here...
ca.processCSR.summary                               = This screen lets you process Certificate Signing Request (CSR) text and view the details of the requestor.  Paste the content of CSR text file you received from the requestor and click on<i>Process CSR</i> button.  The next screen will show the details of the requestor and allow you to input information required to issue a certificate.
ca.processCSR.title                                 = <b>Issue New Certificate</b> - Step 1: Process Certificate Signing Request (CSR)
ca.setupCA.summary                                  = On this screen you can enter the Certification Authority (CA) details, algorithm parameters for CA's keypair, algorithm for CA's self signed certificate and a password to protect the CA's private key. The next screen will let you review this information before generating the CA's keypair and self-signed certificate.
ca.setupCA.title                                    = <b>Setup Certification Authority</b> - Step 1: Enter CA details
ca.unlockCA.enterCAPrivateKeyPassword               = Enter the CA's private key password
ca.unlockCA.summary                                 = This screen lets you unlock the CA by providing the password used to protect the CA's private key.  Once unlocked, the CA functions will be available.
ca.viewCertificate.backToRequest                    = Back to Requests to be fulfilled
ca.viewCertificate.enterSerialNumber                = Enter the serial number of the certificate to be viewed and click on <i>View Certificate</i> button.
ca.viewCertificate.screenShows                      = This screen shows the details of a certificate issued by the CA.  The base64 encoded certificate text should be sent to the requestor as a reply to their Certificate Signing Request (CSR).

configmanager.help.stopStart            = Stop/Start
configmanager.help.stopStartExp         = The stop/start toggle can be clicked to stop or start an application. If the toggle says &quot;Stop&quot; the application is running so clicking on the Stop toggle will stop the application and vice versa.
configmanager.help.title                = This page lists the applications that have been installed in the server and whether they are running or stopped. There are four columns; two provide information and the other two allow user action. The first column indicates the state of the application, either &quot;stopped&quot; or &quot;running.&quot; The fourth column shows the configID of the application. The two remaining columns are:
configmanager.help.uninstallExp         = The uninstall link will undeploy/remove the application from Geronimo.
configmanager.normal.childComponents    = Child Components
configmanager.normal.componentName      = Component Name
configmanager.normal.expertMode         = Expert User (enable all actions on Geronimo Provided Components)
configmanager.normal.parentComponents   = Parent Components
configmanager.normal.showDependencyMode = Show parent and child components

consolebase.common.JVMVersions     = JVM Versions
consolebase.common.actions         = Actions
consolebase.common.alias           = Alias
consolebase.common.back            = Back
consolebase.common.cancel          = Cancel
consolebase.common.commands        = Commands
consolebase.common.confirmPassword = Confirm Password
consolebase.common.date            = Date
consolebase.common.delete          = Delete
consolebase.common.department      = Department
consolebase.common.deployedAs      = Deployed As
consolebase.common.description     = Description
consolebase.common.done            = Done
consolebase.common.edit            = Edit
consolebase.common.email           = Email
consolebase.common.enable          = enable
consolebase.common.familyName      = Family Name
consolebase.common.file            = File
consolebase.common.filterCriteria  = Filter Criteria
consolebase.common.finish          = Finish
consolebase.common.givenName       = Given Name
consolebase.common.group           = Group
consolebase.common.groupName       = Group Name
consolebase.common.install         = Install
consolebase.common.monitor         = Monitor
consolebase.common.name            = Name
consolebase.common.next            = Next
consolebase.common.password        = Password
consolebase.common.refresh         = Refresh
consolebase.common.reset           = Reset
consolebase.common.restart         = Restart
consolebase.common.return          = Return
consolebase.common.save            = Save
consolebase.common.size            = Size
consolebase.common.start           = Start
consolebase.common.state           = State
consolebase.common.stop            = Stop
consolebase.common.type            = Type
consolebase.common.uninstall       = Uninstall
consolebase.common.update          = Update
consolebase.common.usage           = usage
consolebase.common.user            = User
consolebase.common.userID          = UserID
consolebase.common.userName        = Username
consolebase.common.users           = Users
consolebase.common.version         = Version
consolebase.common.view            = View

infomanager.javaSysHelp.body                   = This page displays the values of the system properties available to the server process.
infomanager.javaSysNormal.etc                  = Etc
infomanager.javaSysNormal.operatingSystem      = Operating System
infomanager.javaSysNormal.user                 = User
infomanager.javaSysNormal.virtualMachine       = Virtual Machine
infomanager.svrInfoHelp.body                   = This page provides information about the uptime of the server and the resources being used by the JVM.
infomanager.svrInfoNormal.architecture         = Architecture
infomanager.svrInfoNormal.availableProcessors  = Available Processors
infomanager.svrInfoNormal.build                = Build
infomanager.svrInfoNormal.cookiesMustBenabled  = Error: Cookies must be enabled
infomanager.svrInfoNormal.currentMemoryUsed    = Current Memory Used
infomanager.svrInfoNormal.java                 = Java
infomanager.svrInfoNormal.javaVendor           = Java Vendor
infomanager.svrInfoNormal.javaVersion          = Java Version
infomanager.svrInfoNormal.jvm                  = JVM
infomanager.svrInfoNormal.locale               = Locale
infomanager.svrInfoNormal.mostMemoryUsed       = Most Memory Used
infomanager.svrInfoNormal.node                 = Node
infomanager.svrInfoNormal.notAvailable         = Not Yet Available
infomanager.svrInfoNormal.operatingSystem      = Operating System
infomanager.svrInfoNormal.os                   = Operating System
infomanager.svrInfoNormal.os.arch              = Architecture
infomanager.svrInfoNormal.os.locale            = Locale
infomanager.svrInfoNormal.os.name              = Name
infomanager.svrInfoNormal.os.patchlevel        = Patch Level
infomanager.svrInfoNormal.os.version           = Version
infomanager.svrInfoNormal.patchLevel           = Patch Level
infomanager.svrInfoNormal.server               = Server
infomanager.svrInfoNormal.startTime            = Start Time
infomanager.svrInfoNormal.totalMemoryAllocated = Total Memory Allocated
infomanager.svrInfoNormal.upTime               = Up Time
infomanager.svrInfoNormal.vendorInfo           = Vendor Information
infomanager.svrInfoNormal.version              = Version

keystore.certificateDetails.backToKeystore     = Back to keystore
keystore.certificateDetails.certificateInfo    = Certificate Info
keystore.certificateDetails.changeKeyPwd       = Change key password
keystore.certificateDetails.criticalExt        = critical ext
keystore.certificateDetails.deleteEntry        = Delete Entry
keystore.certificateDetails.generateCSR        = Generate CSR
keystore.certificateDetails.importCAReply      = Import CA reply
keystore.certificateDetails.nonCriticalExt     = non-critical ext
keystore.certificateDetails.publicKeyAlg       = Public Key Alg
keystore.certificateDetails.reallyDelete       = Are you sure you want to delete {0}?
keystore.certificateDetails.signatureAlg       = Signature Alg
keystore.certificateDetails.validFrom          = Valid From
keystore.certificateDetails.validTo            = Valid To
keystore.changePassword.changePassword         = Change Password
keystore.changePassword.changePwdForKeystore   = Change password for keystore
keystore.changePassword.changePwdForPriKey     = Change password for private key
keystore.changePassword.confirmPassword        = Confirm new password
keystore.changePassword.newPassword            = New password
keystore.changePassword.oldPassword            = Old password
keystore.common.alias                          = Alias
keystore.common.identity                       = Identity
keystore.common.issuer                         = Issuer
keystore.common.keyType                        = Key Type
keystore.common.keystore                       = Keystore
keystore.common.serialNumber                   = Serial Number
keystore.common.subject                        = Subject
keystore.common.trustedCertificate             = Trusted Certificate
keystore.common.unlockKeystore                 = Unlock Keystore
keystore.common.unlockPrivateKey               = Unlock Private Key
keystore.common.validity                       = Validity
keystore.common.version                        = Version
keystore.configureKey.algorithm                = Algorithm
keystore.configureKey.aliasForKey              = Alias for new key
keystore.configureKey.certificateIdentity      = Certificate Identity
keystore.configureKey.city_Locality            = City/Locality
keystore.configureKey.company_Org              = Company/Organization
keystore.configureKey.country_Code             = Country Code
keystore.configureKey.division_BusinessUnit    = Division/Business Unit
keystore.configureKey.keySize                  = Key Size
keystore.configureKey.passwordForKey           = Password for new key
keystore.configureKey.reviewKeyData            = Review Key Data
keystore.configureKey.serverHostname           = Server Hostname
keystore.configureKey.state_Province           = State/Province
keystore.configureKey.title                    = On this screen you can configure the settings to generate a new private key. The next screen will let you review this information before generating the private key and accompanying certificate. 
keystore.configureKey.validFor                 = Valid for (# of days)
keystore.confirmCertificate.certificateDetails = Certificate Details
keystore.confirmCertificate.fingerprint        = Fingerprint
keystore.confirmCertificate.importCertificate  = Import Certificate
keystore.confirmCertificate.title              = Please confirm that this is the correct certificate to import:
keystore.confirmKey.generateKey                = Generate Key
keystore.confirmKey.title                      = Please confirm that this is the correct information for the key I'm about to generate:
keystore.createKeystore.createKeystore         = Create Keystore
keystore.createKeystore.keystoreFileName       = Keystore file name
keystore.createKeystore.passwordForKeystore    = Password for new keystore
keystore.createKeystore.type                   = Keystore Type
keystore.generateCSR.PKCS10CertificatioRequest = PKCS10 Certification Request
keystore.importCAReply.PKCS7CertificateReply   = PKCS7 Certificate Reply
keystore.importCAReply.pasteHere               = \ ...paste pkcs7 encoded certificate reply here...
keystore.index.available                       = Available
keystore.index.contents                        = Contents
keystore.index.continueLocking                 = This keystore is currently in use.  Locking it may prevent the server from starting.  Continue?
keystore.index.editable                        = Editable
keystore.index.explanation                     = Keystores start out as locked against editing and also not available for usage by other components in the server.  The <b>Editable</b> flag indicates whether the keystore has been unlocked for editing  (by entering the keystore password), which lasts for the current login session.   The <b>Available</b> flag indicates whether that password has been saved in order to make the keystore available to other components in the server.
keystore.index.keystoreFile                    = Keystore File
keystore.index.keystoreLocked                  = Keystore locked
keystore.index.locked                          = Locked
keystore.index.newKeystore                     = New Keystore
keystore.index.noKeystores                     = There are no keystores defined
keystore.index.title                           = This tool walks you through the process of configuring keystores to use with SSL connectors (for the web container, etc.).
keystore.index.type                            = Type
keystore.index.unlocked                        = Unlocked
keystore.unlockKey.title                       = The keystore has been unlocked.  However, a private key within the keystore also needs to be unlocked in order for SSL to work properly.  Please specify the password for the private key within the keystore.
keystore.unlockKey.unlockPrivateKey            = Unlock Private Key
keystore.unlockKeystore.enterKeystorePassword  = Enter keystore password
keystore.uploadCertificate.aliasForCertificate = Alias for certificate
keystore.uploadCertificate.pasteHere           = ...paste trusted certificate text here...
keystore.uploadCertificate.reviewCertificate   = Review Certificate
keystore.uploadCertificate.title               = This screen lets you input a certificate to import into the keystore.  Paste the content of the certificate file in the text area and specify an alias to store it under in the keystore.  The next step will let you review the certificate before committing it to the keystore.
keystore.viewKeystore.addtrustCertificate      = Add Trust Certificate
keystore.viewKeystore.certificateFingerprint   = Certificate Fingerprint
keystore.viewKeystore.changePassword           = Change keystore password
keystore.viewKeystore.createprivateKey         = Create Private Key
keystore.viewKeystore.privateKey               = Private Key
keystore.viewKeystore.returnToKeystoreList     = Return to keystore list
keystore.viewKeystore.title                    = This screen lists the contents of a keystore.

logmanager.common.configFile                      = Config File
logmanager.common.filterCriteria                  = Filter Criteria
logmanager.common.logLevel                        = Log Level<i>
logmanager.common.refreshPeriod                   = Refresh Period
logmanager.common.title                           = <b>Note:</b> Updated values will take effect for only this run of the server and will reset to default values once the server is stopped.  The Config File value can be overridden at server startup by using <i>org.apache.geronimo.log4jservice.configuration</i> system property.
logmanager.help.configFileExplanation             = Another configuration file can be used by entering a different path and file name in the Config file text box.
logmanager.help.introduction                      = <p>This portlet allows the user to temporarily select a configuration file for logging and/or change the log level and Refresh period. The default &quot;Config file&quot; is a standard log4j file and defines the location where the Geronimo Server will log Geronimo output. The configuration file also defines the log level, the maximum log file size,  and other attributes associated with logging. <br> <br>   Gereonimo Console will display output from the Geronimo log file in the Server Log Viewer portlet in the next window pane.</p>
logmanager.help.logLevelExplanation               = The user may select a level for logging from the drop-down menu.
logmanager.help.refreshPeriodExplanation          = By default Geronimo checks every 60 seconds to see if the configuration file has changed. The user may modify the refresh period.
logmanager.help.resetExplanation                  = Resets the &quot;Config File&quot;, &quot;Refresh Period&quot; and &quot;Log Level&quot; to their settings at the last &quot;Update.&quot; It does not reset to the Geronimo Server defaults.
logmanager.help.updateExplanation                 = Make changes take effect until next server restart.
logmanager.search.containingText                  = Containing text
logmanager.search.fileterLog                      = Filter Log
logmanager.search.go                              = Go 
logmanager.search.level                           = Level
logmanager.search.lines                           = Lines
logmanager.search.maxResults                      = Max Results
logmanager.search.messagesMatched                 = {0} total message(s) in log file. {1} matched your criteria
logmanager.search.noLogs                          = No logs found with the specified criteria.
logmanager.search.numberOfResultsCapped           = number of results capped
logmanager.search.to                              = To
logmanager.search.withExceptions                  = With Exceptions
logmanager.viewhelp.filterResults                 = Filter results
logmanager.viewhelp.filterResultsExplanationFrag1 = Allows the user to customize the filtering criteria. The user can display any line of the log file starting at the first line of the log file through the end. Note: A browser may limit how many lines can be displayed at once.
logmanager.viewhelp.filterResultsExplanationFrag2 = The user may filter on the log level to display only log lines at that level.
logmanager.viewhelp.filterResultsExplanationFrag3 = The user may also enter a string of text to search for.
logmanager.viewhelp.introduction                  = This portlet displays the Geronimo server log and is helpful for debugging problems with the Geronimo Console and with deployed applications.
logmanager.viewhelp.refreshExplanation            = Resets the filtering criteria to Geronimo Console's defaults and displays the latest 11 lines in the Geronimo log file.


repository.help.addDependencyElement       = To use an artifact in an application, add a dependency element into it's deployment plan. For example, to use Castor XML add the following XML to the plan:
repository.help.browseExplanation          = Browse to select the artifact to be added.
repository.help.installExplanation         = Click on this button to install the artifact.
repository.help.title                      = This page displays the artifacts installed in the server's repository. The layout of the repository is the same as that used by Apache Maven making it possible to easily copy files over. The Geronimo Console provides a method for adding artifacts:
repository.normal.addArchiveToRepository   = Add Archive to Repository
repository.normal.artifact                 = Artifact
repository.normal.currentRepositoryEntries = Current Repository Entries
repository.normal.title                    = Add Archive to Repository
repository.normal.toViewUsage              = Click on an entry to view usage.
repository.usage.content                   = To use <b>{0}</b> in an application or a module, add a dependency element under dependencies in environment element in it's deployment plan as shown below:
repository.usage.title                     = Usage for {0}

securityrealmmanager.common.groupNameExp                   = The name of the group.
securityrealmmanager.derby.groups.addmaximized.addGroup    = ADD GROUP
securityrealmmanager.derby.groups.addmaximized.noUsers     = No available users.
securityrealmmanager.derby.groups.addmaximized.updateGroup = UPDATE GROUP
securityrealmmanager.derby.groups.help.addNewGroupBtnExp   = Clicking this button will create the new group. If users had been put in the new group, clicking &quot;Add&quot; will create the new group with the selected users in it.
securityrealmmanager.derby.groups.help.cancelUserBtnExp    = Will cancel the creation of the new group and return the previous page to the browser.
securityrealmmanager.derby.groups.help.descriptionExp      = The description of the group.
securityrealmmanager.derby.groups.help.title               = This portlet lists all the Application Realm groups and allows the user to add, modify and delete them. To add a new group click on the &quot;Create New Group&quot; link and fill in the fields on that page. To modify an existing group, click on the group link and change the field(s) on the page. To delete a group, click on the &quot;Delete&quot; link to the right of the group to be deleted. <br>  <br>   Clicking on the &quot;Create New Group&quot; link allows creation of a new group by filling in the fields and  clicking on the &quot;Add&quot; button.
securityrealmmanager.derby.groups.help.usersExp            = The box on the left lists all the current user accounts. Selecting a user and then clicking the &quot;Add&gt;&gt;&quot; button will put the user in the group. Selecting a user in the list to the right and clicking on the &quot;&lt;&lt;Remove&quot; button will delete the user from the group.
securityrealmmanager.derby.groups.maximized.createNewGroup = Create New Group
securityrealmmanager.derby.users.addmaximized.addUser      = ADD USER
securityrealmmanager.derby.users.addmaximized.updateUser   = UPDATE USER
securityrealmmanager.derby.users.help.addUserBtnExp        = To add the new user click the &quot;Add&quot; button.
securityrealmmanager.derby.users.help.cancelUserBtnExp     = To cancel an add this button must be clicked before the &quot;Add&quot; button.
securityrealmmanager.derby.users.help.confirmPasswordExp   = Re-enter the new user's password.
securityrealmmanager.derby.users.help.createUserBtnExp     = Click on this button to create the new user and return to the main &quot;Console Realm Users&quot; page. The new user will be listed there.
securityrealmmanager.derby.users.help.departmentExp        = The user's department.
securityrealmmanager.derby.users.help.emailExp             = The user's email address.
securityrealmmanager.derby.users.help.familyNameExp        = The user's last name.
securityrealmmanager.derby.users.help.givenNameExp         = The user's first name.
securityrealmmanager.derby.users.help.passwordExp          = Password for the new user.
securityrealmmanager.derby.users.help.title                = This page lists all the application realm users and allows you to add, modify and delete them. To add a new user click on the &quot;Create New User&quot; link and fill in the fields on that page. To modify a user's account, click on the username link for the user and change the field(s) on the page. To delete a user, click on the &quot;Delete&quot;  link to the right of the user to be deleted. <br>  <br>  Clicking on the &quot;Create New User&quot; link allows adding users by filling in the fields and clicking on the &quot;Add&quot; button. The fields are defined as follows:
securityrealmmanager.derby.users.help.usernameExp          = The username for the user.
securityrealmmanager.derby.users.maximized.createNewUser   = Create New User
securityrealmmanager.se.groups.addmaximized.addGroup       = ADD GROUP
securityrealmmanager.se.groups.addmaximized.updateGroup    = UPDATE GROUP
securityrealmmanager.se.groups.help.addNewGroupBtnExp      = Clicking this button will create the new group. If users had been put in the new group, clicking &quot;Add&quot; will create the new group with the selected users in it.
securityrealmmanager.se.groups.help.cancelNewGroupBtnExp   = Cancel the current operation.
securityrealmmanager.se.groups.help.title                  = This portlet lists all the Console Realm groups and allows the user to add, modify and delete them. To add a new group click on the &quot;Create New Group&quot; link and fill in the fields on that page. To modify an existing group, click on the group link and change the field(s) on the page. To delete a group, click on the &quot;Delete&quot; link to the right of the group to be deleted. <br>  <br>Clicking on the &quot;Create New Group&quot; link allows the user to add a new   group. The fields are defined as follows:
securityrealmmanager.se.groups.help.usersExp               = The box on the left lists all the current user accounts. Selecting a user and then clicking the &quot;Add&gt;&gt;&quot; button will put the user in the group. Selecting a user in the list to the right and clicking on the &quot;&lt;&lt;Remove&quot; button will delete the user from the group.
securityrealmmanager.se.groups.maximized.createNewGroup    = Create New Group
securityrealmmanager.se.groups.maximized.createNewUser     = Create New User
securityrealmmanager.se.groups.maximized.noUsers           = No available users.
securityrealmmanager.se.groups.maximized.updateGroup       = UPDATE GROUP
securityrealmmanager.se.users.addmaximized.addGroup        = ADD GROUP
securityrealmmanager.se.users.addmaximized.addUser         = ADD USER
securityrealmmanager.se.users.addmaximized.updateUser      = UPDATE USER
securityrealmmanager.se.users.help.cancelUserBtnExp        = Cancel the current operation.
securityrealmmanager.se.users.help.confirmPasswordExp      = Re-enter the new user's password.
securityrealmmanager.se.users.help.createUserBtnExp        = Click on this button to create the new user and return to the main &quot;Console Realm Users&quot; page. The new user will be listed there.
securityrealmmanager.se.users.help.passwordExp             = Password for the new user.
securityrealmmanager.se.users.help.title                   = This portlet lists all the console realm users and allows the user to add, modify and delete them. To add a new user click on the &quot;Create New User&quot; link and fill in the fields on that page. To modify a user's account, click on the username link for the user and change the field(s) on the page. To delete a user, click on the &quot;Delete&quot; link to the right of the user to be deleted.<br> <br> Clicking on the Create New User link brings up a page that allows adding users by filling in the fields  and clicking on the&quot;Add&quot; button. The fields are defined as follows:
securityrealmmanager.se.users.help.usernameExp             = The username for the user.
securityrealmmanager.se.users.maximized.createNewUser      = Create New User

servermanager.help.shutdownHelpBody   = <p>This portlet give the admin the ability to remotely shutdown the Geronimo server.</p><p>A shutdown will shutdown the server and cause the JVM to exit. To continue using the Geronimo Console after a shutdown, Geronimo must be restarted.</p>
servermanager.normal.areYouSure       = Are you sure you want to shutdown the server (last chance)?
servermanager.normal.proceedOnlyIf    = Proceed only if you are certain you want to terminate the server.
servermanager.normal.shutdown         = Shutdown
servermanager.normal.warning          = WARNING: A shutdown of the server will disable this Web Console!
servermanager.shutdown.shutdownIssued = Server shutdown has been issued.

threads.list.title                        = This page lists the thread pools defined in the Geronimo server.  <i>Note: Currently not all threads used by Geronimo come from one of these thread pools.  We're working on migrating the different components of Geronimo toward these thread pools.</i>
threads.monitor.currentConsumersOfThreads = Current consumers of threads in this pool
threads.monitor.description               = Description
threads.monitor.highestRecorded           = Highest Recorded
threads.monitor.lowestRecorded            = Lowest Recorded
threads.monitor.ofThreads                 = # of Threads
threads.monitor.poolMax                   = Pool Max
threads.monitor.threadsInUse              = Threads in Use
threads.monitor.title                     = Thread pools statistics for {0}:

webaccesslogmanager.common.authenticatedUser  = Authenticated User
webaccesslogmanager.common.filterLog          = Filter Log
webaccesslogmanager.common.from               = From (MM/DD/YYYY)
webaccesslogmanager.common.ignoreDates        = Ignore Dates
webaccesslogmanager.common.remoteAddress      = Remote Address
webaccesslogmanager.common.request            = Request
webaccesslogmanager.common.requestMethod      = Request Method
webaccesslogmanager.common.requestedURI       = Requested URI
webaccesslogmanager.common.to                 = To (MM/DD/YYYY)
webaccesslogmanager.help.authenticatedUserExp = A username, such as &quot;system.&quot;
webaccesslogmanager.help.fromTo               = From/To
webaccesslogmanager.help.fromToExp            = Display log output from the dates specified.
webaccesslogmanager.help.ignoreDatesExp       = If this checkbox is checked, filtering will not be done using the date. All log lines that match the other filtering criteria will be displayed regardless of the date.\r\n
webaccesslogmanager.help.refreshExp           = Retrieves the latest lines from the log file while retaining the user's filtering criteria.
webaccesslogmanager.help.remoteAddressExp     = A specific remote host can be entered in this field using it's IP address, e.g., 192.168.1.1.
webaccesslogmanager.help.requestMethodExp     = This drop-down box allows the user to filter on &quot;ANY&quot;, &quot;POST&quot; and &quot;GET&quot; methods.
webaccesslogmanager.help.requestedURIExp      = Filtering can be done on the Requested URI field by entering a URI, such as, http://localhost:8080/cviewer/jsp/viewclass.jsp
webaccesslogmanager.help.title                = This portlet displays and filters the Jetty log file. The Jetty log file contains HTTP accesses and messages from JSP and servlet applications that are running on Geronimo. By default this portlet displays the contents of the log file for the current date. The user can apply filtering criteria to view only data of interest. The user may enter information into any/all/none of the fields, which are defined next.
webaccesslogmanager.view.container            = Container
webaccesslogmanager.view.filterResults        = Filter results
webaccesslogmanager.view.foundMatches         = Found {0} matches in logfile ({1} lines searched).
webaccesslogmanager.view.go                   = Go
webaccesslogmanager.view.identity             = Identity
webaccesslogmanager.view.ignoreDates          = Ignore Dates
webaccesslogmanager.view.maxResults           = Max Results
webaccesslogmanager.view.noLogEntries         = No log entries found.
webaccesslogmanager.view.request              = Request
webaccesslogmanager.view.resultSize           = Result Size
webaccesslogmanager.view.searchResult         = Found {0} matches in logfile ({1} lines searched).
webaccesslogmanager.view.searchWebContainer   = Search Web Container
webaccesslogmanager.view.searchWebLog         = Search Web Log
webaccesslogmanager.view.startResult          = Start Result

webmanager.common.HTTPSAlgorithm                         = HTTPS Algorithm
webmanager.common.HTTPSProtocol                          = HTTPS Protocol
webmanager.common.SSLSettings                            = SSL Settings
webmanager.common.acceptCount                            = AcceptCount
webmanager.common.acceptCountExp                         = The maximum queue length for incoming connection requests when all possible request processing threads are in use. Any requests received when the queue is full will be refused. The default value is 10.
webmanager.common.all                                    = all
webmanager.common.allowTrace                             = AllowTrace
webmanager.common.bufferSize                             = BufferSize
webmanager.common.bufferSizeExp                          = The size (in bytes) of the buffer to be provided for input streams created by this connector. By default, buffers of 2048 bytes will be provided.
webmanager.common.ciphers                                = Ciphers
webmanager.common.ciphersExp                             = A comma separated list of the encryption ciphers that may be used. If not specified, then any available cipher may be used.
webmanager.common.clientAuthRequired                     = Client Auth Required
webmanager.common.compressableMimeType                   = CompressableMimeType
webmanager.common.compressableMimeTypeExp                = The value is a comma separated list of MIME types for which HTTP compression may be used. The default value is text/html,text/xml,text/plain.
webmanager.common.compression                            = Compression
webmanager.common.compressionExp                         = The Connector may use HTTP/1.1 GZIP compression in an attempt to save server bandwidth. The acceptable values for the parameter is "off" (disable compression), "on" (allow compression, which causes text data to be compressed), "force" (forces compression in all cases), or a numerical integer value (which is equivalent to "on", but specifies the minimum amount of data before the output is compressed). If the content-length is not known and compression is set to "on" or more aggressive, the output will also be compressed. If not specified, this attribute is set to "off".
webmanager.common.confirmPassword                        = Confirm Password
webmanager.common.connectionLinger                       = ConnectionLinger
webmanager.common.connectionLingerExp                    = The number of milliseconds during which the sockets used by this Connector will linger when they are closed. The default value is -1 (socket linger is disabled).
webmanager.common.connectionTimeout                      = ConnectionTimeout
webmanager.common.connectionTimeoutExp                   = The number of milliseconds this Connector will wait, after accepting a connection, for the request URI line to be presented. The default value is 60000 (i.e. 60 seconds).
webmanager.common.disableUploadTimeout                   = DisableUploadTimeout
webmanager.common.disableUploadTimeoutExp                = This flag allows the servlet container to use a different, longer connection timeout while a servlet is being executed, which in the end allows either the servlet a longer amount of time to complete its execution, or a longer timeout during data upload. If not specified, this attribute is set to "true".
webmanager.common.emptySessionPath                       = EmptySessionPath
webmanager.common.emptySessionPathExp                    = If checked, all paths for session cookies will be set to /.
webmanager.common.enableLookups                          = EnableLookups
webmanager.common.enableLookupsExp                       = Check if you want calls to request.getRemoteHost() to perform DNS lookups in order to return the actual host name of the remote client.  By default, DNS lookups are enabled.
webmanager.common.fields                                 = fields
webmanager.common.host                                   = Host
webmanager.common.hostExp                                = The host name or IP to bind to. The normal values are <tt>0.0.0.0</tt> (all interfaces) or <tt>localhost</tt> (local connections only)
webmanager.common.keepAliveTimeout                       = KeepAliveTimeout
webmanager.common.keepAliveTimeoutExp                    = The number of milliseconds this Connector will wait, subsequent request before closing the connection. The default value is to use the value that has been set for the connectionTimeout.
webmanager.common.keyStore                               = Key Store
webmanager.common.keystoreFile                           = Keystore File
webmanager.common.keystorePassword                       = Keystore Password
webmanager.common.keystoreType                           = Keystore Type
webmanager.common.list                                   = list
webmanager.common.listConnectors                         = List connectors
webmanager.common.maxHttpHeaderSize                      = MaxHttpHeaderSize
webmanager.common.maxHttpHeaderSizeExp                   = The maximum size of the request and response HTTP header, specified in bytes. If not specified, this attribute is set to 4096 (4 KB).
webmanager.common.maxKeepAliveRequests                   = MaxKeepAliveRequests
webmanager.common.maxKeepAliveRequestsExp                = The maximum number of HTTP requests which can be pipelined until the connection is closed by the server. Setting this attribute to 1 will disable HTTP/1.0 keep-alive, as well as HTTP/1.1 keep-alive and pipelining. Setting this to -1 will allow an unlimited amount of pipelined or keep-alive HTTP requests. If not specified, this attribute is set to 100.
webmanager.common.maxPostSize                            = MaxPostSize
webmanager.common.maxPostSizeExp                         = The maximum size in bytes of the POST which will be handled by the container FORM URL parameter parsing. The limit can be disabled by setting this attribute to a value less than or equal to 0. Default value is 2097152 (2 megabytes)
webmanager.common.maxSavePostSize                        = MaxSavePostSize
webmanager.common.maxSavePostSizeExp                     = The maximum size in bytes of the POST which will be saved/buffered by the container during FORM or CLIENT-CERT authentication. The limit can be disabled by setting this attribute to -1. Setting the attribute to zero will disable the saving of POST data during authentication . Default value is 4096 (4 kilobytes).
webmanager.common.maxSpareThreads                        = MaxSpareThreads
webmanager.common.maxSpareThreadsExp                     = The maximum number of unused request processing threads that will be allowed to exist until the thread pool starts stopping the unnecessary threads. The default value is 50.
webmanager.common.maxThreads                             = Max Threads
webmanager.common.maxThreadsExp                          = The maximum number of threads this connector should use to handle incoming requests
webmanager.common.minSpareThreads                        = MinSpareThreads
webmanager.common.minSpareThreadsExp                     = The number of request processing threads that will be created when this Connector is first started. The connector will also make sure it has the specified number of idle processing threads available. This attribute should be set to a value smaller than that set for maxThreads. The default value is 4.
webmanager.common.minThreads                             = Min Threads
webmanager.common.minThreadsExp                          = The minimum number of threads this connector should use to handle incoming requests
webmanager.common.noCompressionUserAgents                = NoCompressionUserAgents
webmanager.common.noCompressionUserAgentsExp             = The value is a comma separated list of regular expressions matching user-agents of HTTP clients for which compression should not be used, because these clients, although they do advertise support for the feature, have a broken implementation. The default value is an empty String (regexp matching disabled).
webmanager.common.port                                   = Port
webmanager.common.portExp                                = The network port to bind to.
webmanager.common.protocol                               = Protocol
webmanager.common.proxyName                              = ProxyName
webmanager.common.proxyNameExp                           = If this Connector is being used in a proxy configuration, configure this attribute to specify the server name to be returned for calls to request.getServerName().
webmanager.common.proxyPort                              = ProxyPort
webmanager.common.proxyPortExp                           = If this Connector is being used in a proxy configuration, configure this attribute to specify the server port to be returned for calls to request.getServerPort().
webmanager.common.redirectPort                           = RedirectPort
webmanager.common.redirectPortExp                        = If this Connector is supporting non-SSL requests, and a request is received for which a matching <security-constraint> requires SSL transport, Catalina will automatically redirect the request to the port number specified here.
webmanager.common.restrictedUserAgents                   = RestrictedUserAgents
webmanager.common.restrictedUserAgentsExp                = The value is a comma separated list of regular expressions matching user-agents of HTTP clients for which HTTP/1.1 or HTTP/1.0 keep alive should not be used, even if the clients advertise support for these features. The default value is an empty String (regexp matching disabled).
webmanager.common.server                                 = Server
webmanager.common.serverExp                              = The Server header for the http response. Unless your paranoid, you won't need this feature. (No offense.  The description is taken from Tomcat documentation.)
webmanager.common.show                                   = Show
webmanager.common.showAllFieldsExp                       = Check this box to view and configure all attributes.  Uncheck to hide. Note: Hiding will not remove the field values.
webmanager.common.socketBuffer                           = SocketBuffer
webmanager.common.socketBufferExp                        = The size (in bytes) of the buffer to be provided for socket output buffering. -1 can be specified to disable the use of a buffer. By default, a buffers of 9000 bytes will be used.
webmanager.common.strategy                               = Strategy
webmanager.common.strategyExp                            = The thread pooling strategy which will be used. The default strategy does not use a master thread, but a more conventional strategy using a master listener thread can be used by setting "ms" as this attribute's value. The master strategy will work significantly better using the threadPriority attribute, which will apply only to the thread which listens on the server socket. This is set to lf by default.
webmanager.common.string                                 = String
webmanager.common.tcpNoDelay                             = TcpNoDelay
webmanager.common.tcpNoDelayExp                          = If checked, the TCP_NO_DELAY option will be set on the server socket, which improves performance under most circumstances.
webmanager.common.threadPriority                         = ThreadPriority
webmanager.common.threadPriorityExp                      = The priority of the request processing threads within the JVM. The default value is java.lang.Thread#NORM_PRIORITY. See the JavaDoc for the java.lang.Thread class for more details on what this priority means.
webmanager.common.traceExp                               = Check to enable the TRACE HTTP method.
webmanager.common.trustStore                             = Trust Store
webmanager.common.truststoreFile                         = Truststore File
webmanager.common.truststorePassword                     = Truststore Password
webmanager.common.truststoreType                         = Truststore Type
webmanager.common.uniqueName                             = Unique Name
webmanager.common.uniqueNameExp                          = A name that is different than the name for any other web connectors in the server (no spaces in the name please)
webmanager.common.uriEncoding                            = URIEncoding
webmanager.common.uriEncodingExp                         = This specifies the character encoding used to decode the URI bytes, after %xx decoding the URL. Default is ISO-8859-1.
webmanager.common.useBodyEncodingForURI                  = UseBodyEncodingForURI
webmanager.common.useBodyEncodingForURIExp               = Check this if the encoding specified in contentType should be used for URI query parameters, instead of using the URIEncoding.
webmanager.common.useIPVHosts                            = UseIPVHosts
webmanager.common.useIPVHostsExp                         = Check this to cause Tomcat to use the IP address that the request was recieved on to determine the Host to send the request to.
webmanager.common.xPoweredBy                             = XpoweredBy
webmanager.common.xPoweredByExp                          = Check this to cause Tomcat to advertise support for the Servlet specification using the header recommended in the specification.
webmanager.connector.editConnector.TomcatManagerImpl.101 = Set this attribute to true to cause Tomcat to use the IP address that the request was recieved on to determine the Host to send the request to.
webmanager.connector.editConnector.TomcatManagerImpl.103 = Set this attribute to true to cause Tomcat to advertise support for the Servlet specification using the header recommended in the specification.
webmanager.connector.editConnector.TomcatManagerImpl.105 = The maximum queue length for incoming connection requests when all possible request processing threads are in use. Any requests received when the queue is full will be refused.
webmanager.connector.editConnector.TomcatManagerImpl.108 = The host name or IP to bind to. The normal values are 0.0.0.0 (all interfaces) or localhost (local connections only).
webmanager.connector.editConnector.TomcatManagerImpl.11  = Protocol which may be used for communicating with clients.
webmanager.connector.editConnector.TomcatManagerImpl.110 = The size (in bytes) of the buffer to be provided for input streams created by this connector.
webmanager.connector.editConnector.TomcatManagerImpl.113 = The value is a comma separated list of MIME types for which HTTP compression may be used.
webmanager.connector.editConnector.TomcatManagerImpl.116 = The Connector may use HTTP/1.1 GZIP compression in an attempt to save server bandwidth. The acceptable values for the parameter is <i>off</i> (disable compression), <i>on</i> (allow compression, which causes text data to be compressed), <i>force</i> (forces compression in all cases), or a numerical integer value (which is equivalent to <i>on</i>, but specifies the minimum amount of data before the output is compressed). If the content-length is not known and compression is set to <i>on</i> or more aggressive, the output will also be compressed.
webmanager.connector.editConnector.TomcatManagerImpl.118 = The number of milliseconds during which the sockets used by this Connector will linger when they are closed. The default value is -1 (socket linger is disabled).
webmanager.connector.editConnector.TomcatManagerImpl.120 = The number of milliseconds this Connector will wait, after accepting a connection, for the request URI line to be presented.
webmanager.connector.editConnector.TomcatManagerImpl.122 = A reference to the name in an Executor element. If this attribute is enabled, and the named executor exists, the connector will use the executor, and all the other thread attributes will be ignored.
webmanager.connector.editConnector.TomcatManagerImpl.124 = The number of milliseconds this Connector will wait for another HTTP request before closing the connection. 
webmanager.connector.editConnector.TomcatManagerImpl.126 = This flag allows the servlet container to use a different, longer connection timeout while a servlet is being executed, which in the end allows either the servlet a longer amount of time to complete its execution, or a longer timeout during data upload.
webmanager.connector.editConnector.TomcatManagerImpl.128 = The maximum size of the request and response HTTP header, specified in bytes.
webmanager.connector.editConnector.TomcatManagerImpl.130 = The maximum number of HTTP requests which can be pipelined until the connection is closed by the server. Setting this attribute to 1 will disable HTTP/1.0 keep-alive, as well as HTTP/1.1 keep-alive and pipelining. Setting this to -1 will allow an unlimited amount of pipelined or keep-alive HTTP requests.
webmanager.connector.editConnector.TomcatManagerImpl.132 = The maximum number of request processing threads to be created by this Connector, which therefore determines the maximum number of simultaneous requests that can be handled. If not specified, this attribute is set to 40. If an executor is associated with this connector, this attribute is ignored as the connector will execute tasks using the executor rather than an internal thread pool.
webmanager.connector.editConnector.TomcatManagerImpl.134 = Minimum spare threads
webmanager.connector.editConnector.TomcatManagerImpl.136 = Maximum spare threads
webmanager.connector.editConnector.TomcatManagerImpl.139 = The value is a comma separated list of regular expressions matching user-agents of HTTP clients for which compression should not be used, because these clients, although they do advertise support for the feature, have a broken implementation.
webmanager.connector.editConnector.TomcatManagerImpl.14  = Ciphers which may be used for communicating with clients.
webmanager.connector.editConnector.TomcatManagerImpl.141 = The TCP port number on which this Connector  will create a server socket and await incoming connections. Your operating system will allow only one server application to listen to a particular port number on a particular IP address.
webmanager.connector.editConnector.TomcatManagerImpl.144 = The value is a comma separated list of regular expressions matching user-agents of HTTP clients for which HTTP/1.1 or HTTP/1.0 keep alive should not be used, even if the clients advertise support for these features. 
webmanager.connector.editConnector.TomcatManagerImpl.147 = The Server header for the http response.
webmanager.connector.editConnector.TomcatManagerImpl.149 = The size (in bytes) of the buffer to be provided for socket output buffering. -1 can be specified to disable the use of a buffer.
webmanager.connector.editConnector.TomcatManagerImpl.151 = If set to true, the TCP_NO_DELAY option will be set on the server socket, which improves performance under most circumstances.
webmanager.connector.editConnector.TomcatManagerImpl.153 = The priority of the request processing threads within the JVM.
webmanager.connector.editConnector.TomcatManagerImpl.155 = The certificate encoding algorithm to be used.
webmanager.connector.editConnector.TomcatManagerImpl.157 = Set to true if you want the SSL stack to require a valid certificate chain from the client before accepting a connection. Set to want if you want the SSL stack to request a client Certificate, but not fail if one isn't presented. A false value (which is the default) will not require a certificate chain unless the client requests a resource protected by a security constraint that uses CLIENT-CERT authentication.
webmanager.connector.editConnector.TomcatManagerImpl.160 = The file that holds the keystore (relative to the Geronimo install dir)
webmanager.connector.editConnector.TomcatManagerImpl.162 = Set the password used to access the keystore file. This is also the password used to access the server private key within the keystore (so the two passwords must be set to be the same on the keystore).
webmanager.connector.editConnector.TomcatManagerImpl.165 = Set the keystore type. There is normally no reason not to use the default (JKS).
webmanager.connector.editConnector.TomcatManagerImpl.168 = Set the HTTPS protocol. This should normally be set to TLS, though some (IBM) JVMs don't work properly with popular browsers unless it is changed to SSL.
webmanager.connector.editConnector.TomcatManagerImpl.17  = Name of the file that contains the server certificate. The format is PEM-encoded.
webmanager.connector.editConnector.TomcatManagerImpl.171 = A comma separated list of the encryption ciphers that may be used. If not specified, then any available cipher may be used.
webmanager.connector.editConnector.TomcatManagerImpl.173 = The alias used to for the server certificate in the keystore. If not specified the first key read in the keystore will be used.
webmanager.connector.editConnector.TomcatManagerImpl.175 = The TrustStore file to use to validate client certificates.
webmanager.connector.editConnector.TomcatManagerImpl.177 = The password to access the TrustStore.
webmanager.connector.editConnector.TomcatManagerImpl.179 = Set the truststore type. There is normally no reason not to use the default (JKS).
webmanager.connector.editConnector.TomcatManagerImpl.181 = Use this attribute to enable or disable sendfile capability.
webmanager.connector.editConnector.TomcatManagerImpl.183 = Set to true to use the NIO thread pool executor. The default value is true. If set to false, it uses a thread pool based on a stack for its execution. Generally, using the executor yields a little bit slower performance, but yields a better fairness for processing connections in a high load environment as the traffic gets queued through a FIFO queue. If set to true(default) then the max pool size is the maxThreads attribute and the core pool size is the minSpareThreads. This value is ignored if the executor attribute is present and points to a valid shared thread pool.
webmanager.connector.editConnector.TomcatManagerImpl.185 = The number of threads to be used to accept connections. Increase this value on a multi-CPU machine, although you would never really need more than 2. Also, with a lot of non-keep-alive connections, you might want to increase this value as well. 
webmanager.connector.editConnector.TomcatManagerImpl.187 = The number of threads to be used to run for the polling events.
webmanager.connector.editConnector.TomcatManagerImpl.189 = The priority of the poller threads.
webmanager.connector.editConnector.TomcatManagerImpl.19  = Name of the file that contains the server private key.
webmanager.connector.editConnector.TomcatManagerImpl.191 = The priority of the acceptor threads. The threads used to accept new connections.
webmanager.connector.editConnector.TomcatManagerImpl.193 = The time in milliseconds to timeout on a select() for the poller. This value is important, since connection clean up is done on the same thread, so don't set this value to an extremely high one.
webmanager.connector.editConnector.TomcatManagerImpl.195 = Whether to allow comet servlets or not.
webmanager.connector.editConnector.TomcatManagerImpl.197 = The protocol handler caches Http11NioProcessor objects to speed up performance. This setting dictates how many of these objects get cached. -1 means unlimited, default is 200. Set this value somewhere close to your maxThreads value.
webmanager.connector.editConnector.TomcatManagerImpl.199 = Whether to use direct ByteBuffers or java-mapped ByteBuffers. Default is false. When you are using direct buffers, make sure you allocate the appropriate amount of memory for the direct memory space. On Sun's JDK that would be something like -XX:MaxDirectMemorySize=256m
webmanager.connector.editConnector.TomcatManagerImpl.201 = The socket receive buffer (SO_RCVBUF) size in bytes.
webmanager.connector.editConnector.TomcatManagerImpl.203 = The socket send buffer (SO_SNDBUF) size in bytes.
webmanager.connector.editConnector.TomcatManagerImpl.205 = Each connection that is opened up in Tomcat get associated with a read and a write ByteBuffer. This attribute controls the size of these buffers. By default this read buffer is sized at 8192 bytes. For lower concurrency, you can increase this to buffer more data. For an extreme amount of keep-alive connections, decrease this number or increase your heap size.
webmanager.connector.editConnector.TomcatManagerImpl.207 = Each connection that is opened up in Tomcat get associated with a read and a write ByteBuffer This attribute controls the size of these buffers. By default this write buffer is sized at 8192 bytes. For lower concurrency, you can increase this to buffer more data. For an extreme amount of keep-alive connections, decrease this number or increase your heap size.
webmanager.connector.editConnector.TomcatManagerImpl.209 = The Nio connector uses a class called NioChannel that holds elements linked to a socket. To reduce garbage collection, the Nio connector caches these channel objects. This value specifies the size of this cache. The default value is 500, and represents that the cache will hold 500 NioChannel objects. Other values are -1. unlimited cache, and 0, no cache.
webmanager.connector.editConnector.TomcatManagerImpl.21  = Pass phrase for the encrypted private key.
webmanager.connector.editConnector.TomcatManagerImpl.211 = The NioChannel pool can also be size based, not used object based. The size is calculated as follows: <br>NioChannel buffer size = read buffer size + write buffer size <br>SecureNioChannel buffer size = application read buffer size + application write buffer size + network read buffer size + network write buffer size
webmanager.connector.editConnector.TomcatManagerImpl.213 = Tomcat will cache SocketProcessor objects to reduce garbage collection. The integer value specifies how many objects to keep in the cache at most. The default is 500. Other values are -1. unlimited cache, and 0, no cache.
webmanager.connector.editConnector.TomcatManagerImpl.215 = Tomcat will cache KeyAttachment objects to reduce garbage collection. The integer value specifies how many objects to keep in the cache at most. The default is 500. Other values are -1. unlimited cache, and 0, no cache.
webmanager.connector.editConnector.TomcatManagerImpl.217 = Tomcat will cache PollerEvent objects to reduce garbage collection. The integer value specifies how many objects to keep in the cache at most. The default is 500. Other values are -1. unlimited cache, and 0, no cache.
webmanager.connector.editConnector.TomcatManagerImpl.219 = Same as the standard setting tcpNoDelay.
webmanager.connector.editConnector.TomcatManagerImpl.221 = Boolean value for the socket's keep-alive setting (SO_KEEPALIVE).
webmanager.connector.editConnector.TomcatManagerImpl.223 = Boolean value for the socket OOBINLINE setting.
webmanager.connector.editConnector.TomcatManagerImpl.225 = Boolean value for the sockets reuse address option (SO_REUSEADDR). 
webmanager.connector.editConnector.TomcatManagerImpl.227 = Boolean value for the sockets linger option (SO_LINGER). This option is paired with the soLingerTime value.
webmanager.connector.editConnector.TomcatManagerImpl.229 = Value in seconds for the sockets so linger option (SO_LINGER). This option is paired with the soLingerOn value.
webmanager.connector.editConnector.TomcatManagerImpl.231 = Value in milliseconds for the sockets read timeout (SO_TIMEOUT). 
webmanager.connector.editConnector.TomcatManagerImpl.233 = Value between 0 and 255 for the traffic class on the socket, 0x04 | 0x08 | 0x010
webmanager.connector.editConnector.TomcatManagerImpl.235 = The first value for the performance settings.
webmanager.connector.editConnector.TomcatManagerImpl.237 = The second value for the performance settings.
webmanager.connector.editConnector.TomcatManagerImpl.239 = The third value for the performance settings.
webmanager.connector.editConnector.TomcatManagerImpl.24  = Ask client for certificate.
webmanager.connector.editConnector.TomcatManagerImpl.241 = The max selectors to be used in the pool, to reduce selector contention. Use this option when the command line org.apache.tomcat.util.net.NioSelectorShared value is set to false.
webmanager.connector.editConnector.TomcatManagerImpl.243 = The max spare selectors to be used in the pool, to reduce selector contention. When a selector is returned to the pool, the system can decide to keep it or let it be GC:ed. Use this option when the command line org.apache.tomcat.util.net.NioSelectorShared value is set to false.
webmanager.connector.editConnector.TomcatManagerImpl.245 = The following command line options are available for the NIO connector: <br><i>-Dorg.apache.tomcat.util.net.NioSelectorShared=true|false</i>. Set this value to false if you wish to use a selector for each thread. the property. If you do set it to false, you can control the size of the pool of selectors by using the selectorPool.maxSelectors attribute
webmanager.connector.editConnector.TomcatManagerImpl.247 = The NIO connector implements an OutOfMemoryError strategy called parachute. It holds a chunk of data as a byte array. In case of an OOM, this chunk of data is released and the error is reported. This will give the VM enough room to clean up. The oomParachute represent the size in bytes of the parachute(the byte array). The default value is 1024*1024(1MB). Please note, this only works for OOM errors regarding the Java Heap space, and there is absolutely no guarantee that you will be able to recover at all. If you have an OOM outside of the Java Heap, then this parachute trick will not help.
webmanager.connector.editConnector.TomcatManagerImpl.249 = Duration of a poll call. Lowering this value will slightly decrease latency of connections being kept alive in some cases, but will use more CPU as more poll calls are being made.
webmanager.connector.editConnector.TomcatManagerImpl.251 = Amount of sockets that the poller responsible for polling kept alive connections can hold at a given time. Extra connections will be closed right away.
webmanager.connector.editConnector.TomcatManagerImpl.253 = Use kernel level sendfile for certain static files.
webmanager.connector.editConnector.TomcatManagerImpl.255 = Amount of sockets that the poller responsible for sending static files asynchronously can hold at a given time. Extra connections will be closed right away without any data being sent (resulting in a zero length file on the client side). Note that in most cases, sendfile is a call that will return right away (being taken care of synchronously by the kernel), and the sendfile poller will not be used, so the amount of static files which can be sent concurrently is much larger than the specified amount.
webmanager.connector.editConnector.TomcatManagerImpl.26  = Maximum verification depth for client certificates.
webmanager.connector.editConnector.TomcatManagerImpl.28  = File of concatenated PEM-encoded CA Certificates for Client Auth.
webmanager.connector.editConnector.TomcatManagerImpl.30  = Directory of PEM-encoded CA Certificates for Client Auth.
webmanager.connector.editConnector.TomcatManagerImpl.32  = File of PEM-encoded Server CA Certificates.
webmanager.connector.editConnector.TomcatManagerImpl.34  = File of concatenated PEM-encoded CA CRLs for Client Auth.
webmanager.connector.editConnector.TomcatManagerImpl.36  = Directory of PEM-encoded CA CRLs for Client Auth.
webmanager.connector.editConnector.TomcatManagerImpl.40  = The host name or IP to bind to. The normal values are 0.0.0.0 (all interfaces) or localhost (local connections only)
webmanager.connector.editConnector.TomcatManagerImpl.42  = The network port to bind to.
webmanager.connector.editConnector.TomcatManagerImpl.44  = The maximum queue length for incoming connection requests when all possible request processing threads are in use.
webmanager.connector.editConnector.TomcatManagerImpl.46  = Buffer size
webmanager.connector.editConnector.TomcatManagerImpl.48  = Connection timeout in milliseconds
webmanager.connector.editConnector.TomcatManagerImpl.50  = Keep-alive timeout in milliseconds
webmanager.connector.editConnector.TomcatManagerImpl.52  = The maximum number of threads this connector should use to handle incoming requests
webmanager.connector.editConnector.TomcatManagerImpl.54  = Minimum spare threads
webmanager.connector.editConnector.TomcatManagerImpl.56  = Maximum spare threads
webmanager.connector.editConnector.TomcatManagerImpl.58  = If set to true, the TCP_NO_DELAY option will be set on the server socket, which improves performance under most circumstances.
webmanager.connector.editConnector.TomcatManagerImpl.60  = If set to true, the authentication will be done in Geronimo. Otherwise, the authenticated principal will be propagated from the native web server and used for authorization in Geronimo.
webmanager.connector.editConnector.TomcatManagerImpl.80  = A boolean value which can be used to enable or disable the TRACE HTTP method.
webmanager.connector.editConnector.TomcatManagerImpl.82  = If set to true, all paths for session cookies will be set to /. This can be useful for portlet specification implementations, but will greatly affect performance if many applications are accessed on a given server by the client.
webmanager.connector.editConnector.TomcatManagerImpl.84  = Set to true if you want calls to request.getRemoteHost() to perform DNS lookups in order to return the actual host name of the remote client. Set to false to skip the DNS lookup and return the IP address in String form instead (thereby improving performance).
webmanager.connector.editConnector.TomcatManagerImpl.86  = The maximum size in bytes of the POST which will be handled by the container FORM URL parameter parsing. The limit can be disabled by setting this attribute to a value less than or equal to 0.
webmanager.connector.editConnector.TomcatManagerImpl.88  = The maximum size in bytes of the POST which will be saved/buffered by the container during FORM or CLIENT-CERT authentication. For both types of authentication, the POST will be saved/buffered before the user is authenticated. For CLIENT-CERT authentication, the POST is buffered for the duration of the SSL handshake and the buffer emptied when the request is processed. For FORM authentication the POST is saved whilst the user is re-directed to the login form and is retained until the user successfully authenticates or the session associated with the authentication request expires. The limit can be disabled by setting this attribute to -1. Setting the attribute to zero will disable the saving of POST data during authentication.
webmanager.connector.editConnector.TomcatManagerImpl.90  = If this Connector is being used in a proxy configuration, configure this attribute to specify the server name to be returned for calls to request.getServerName().
webmanager.connector.editConnector.TomcatManagerImpl.92  = If this Connector is being used in a proxy configuration, configure this attribute to specify the server port to be returned for calls to request.getServerPort().
webmanager.connector.editConnector.TomcatManagerImpl.94  = If this Connector is supporting non-SSL requests, and a request is received for which a matching <security-constraint> requires SSL transport, Catalina will automatically redirect the request to the port number specified here.
webmanager.connector.editConnector.TomcatManagerImpl.97  = This specifies the character encoding used to decode the URI bytes, after %xx decoding the URL.
webmanager.connector.editConnector.TomcatManagerImpl.99  = This specifies if the encoding specified in contentType should be used for URI query parameters, instead of using the URIEncoding. This setting is present for compatibility with Tomcat 4.1.x, where the encoding specified in the contentType, or explicitly set using Request.setCharacterEncoding method was also used for the parameters from the URL.
webmanager.connector.editConnector.JettyManagerImpl.30   = The host name or IP to bind to. The normal values are 0.0.0.0 (all interfaces) or localhost (local connections only)
webmanager.connector.editConnector.JettyManagerImpl.32   = The network port to bind to.
webmanager.connector.editConnector.JettyManagerImpl.34   = The maximum number of threads this connector should use to handle incoming requests
webmanager.connector.editConnector.JettyManagerImpl.36   = Size in bytes of input and output buffers.
webmanager.connector.editConnector.JettyManagerImpl.38   = The maximum unaccepted connections to queue if no threads are available.
webmanager.connector.editConnector.JettyManagerImpl.40   = The maximum time in seconds that a connection lingers during close handshaking.
webmanager.connector.editConnector.JettyManagerImpl.42   = Port to redirect to for confidential connections. 0 if not supported.
webmanager.connector.editConnector.JettyManagerImpl.44   = If set, then clients connecting through this connector must supply a valid client certificate.
webmanager.connector.editConnector.JettyManagerImpl.47   = The keystore to use for accessing the server's private key
webmanager.connector.editConnector.JettyManagerImpl.50   = The keystore containing the trusted certificate entries, including Certification Authority (CA) certificates
webmanager.connector.editConnector.JettyManagerImpl.53   = This should normally be set to TLS, though some (IBM) JVMs don't work properly with popular browsers unless it is changed to SSL.
webmanager.connector.editConnector.JettyManagerImpl.56   = This should normally be set to match the JVM vendor.
webmanager.connector.editConnector.JettyManagerImpl.57   = Size in bytes of the header buffer.
webmanager.connector.editConnector.addNew                = Add a new
webmanager.connector.editConnector.attribute             = Attribute
webmanager.connector.editConnector.desc                  = Description
webmanager.connector.editConnector.editConnector         = Edit connector
webmanager.connector.editConnector.requiredAttribute     = (<strong>*</strong> denotes a required attribute)
webmanager.connector.editConnector.type                  = Type
webmanager.connector.editConnector.value                 = Value
webmanager.connector.editHTTP.addNewListener             = Add new {0} listener for {1}
webmanager.connector.help.content                        = The Connector Manager displays connections of all types and provide the capability to modify connections for this web server. 
webmanager.connector.normal.addNew                       = Add new
webmanager.connector.normal.addNewListener               = Add new {0} listener for {1}
webmanager.connector.normal.connectorsFor                = Connectors for {0}
webmanager.connector.normal.consoleNavailable            = Console application will not be available if {0} is stopped.  Stop {1} ?
webmanager.connector.normal.noConnectorsDefined          = There are no connectors defined for {0}
webmanager.connector.normal.noWebContainers              = There are no Web Containers defined
webmanager.connector.normal.reallyDelete                 = Are you sure you want to delete {0} ?
webmanager.help.disable                                  = disable
webmanager.help.disableExplanation                       = Turn off statistics gathering and return the user to the main page.
webmanager.help.refreshExplanation                       = Update the display with the latest statistics.
webmanager.help.resetExplanation                         = Reset all counts, totals, averages, etc., to 0 and start gathering statistics again.
webmanager.help.title                                    = Geronimo Console will collect statistics on the number of requests received by Geronimo Console and on the number of connections made to the Geronimo server. Click on the enable link to monitor the performance of the Geronimo server.
webmanager.normal.activeRequestCount                     = Active Request Count
webmanager.normal.avgTime                                = Avg Time (ms)
webmanager.normal.connectionDuration                     = Connection Duration
webmanager.normal.connectionRequestCount                 = Connection Request Count
webmanager.normal.count                                  = Count
webmanager.normal.current                                = Current
webmanager.normal.elapsedTime                            = Elapsed Time Since Collection Started (hh:mm:ss:SSS)
webmanager.normal.high                                   = High
webmanager.normal.low                                    = Low
webmanager.normal.maxTime                                = Max Time (ms)
webmanager.normal.minTime                                = Min Time (ms)
webmanager.normal.requestDuration                        = Request Duration
webmanager.normal.statistic                              = Statistic
webmanager.normal.total1xxResp                           = Total 1xx Responses
webmanager.normal.total2xxResp                           = Total 2xx Responses
webmanager.normal.total3xxResp                           = Total 3xx Responses
webmanager.normal.total4xxResp                           = Total 4xx Responses
webmanager.normal.total5xxResp                           = Total 5xx Responses
webmanager.normal.totalConnectionCount                   = Total Connection Count
webmanager.normal.totalErrorCount                        = Total Error Count
webmanager.normal.totalRequestCount                      = Total Request Count
webmanager.normal.totalTime                              = Total Time

welcome.welcomeMaximized.fragment1   = The welcome portlet is the first page that users see when they log in to the Administrative Console. It contains introductory information about the Administrative Console.
welcome.welcomeMaximized.fragment2   = To return to the main Welcome panel select the "view" link from the header of this portlet.
welcome.welcomeMaximized.title       = Welcome to the Apache Geronimo&#8482; Administration Console!
welcome.welcomeNormal.about1         = The administration console provides a convenient, user friendly way to administer many aspects of the Geronimo Server.  It is currently a work in progress, and will continue to evolve over time.  The navigation panel on the left-hand side of the screen provides easy access to the individual tasks available in the console.
welcome.welcomeNormal.about2         = This space is the main content area where the real work happens.  Each view contains one or more portlets (self contained view fragments) that typically include a link for help in the header.  Look at the top of this portlet for an example and try it out.
welcome.welcomeNormal.about3         = The references on the right are provided so that you can learn more about Apache Geronimo, its capabilities, and what might be coming in future releases.
welcome.welcomeNormal.about4         = Mailing lists are available to get involved in the development of Apache Geronimo or to ask questions of the community:
welcome.welcomeNormal.about5         = So share your experiences with us and let us know how we can make Geronimo even better.
welcome.welcomeNormal.addiDoc        = Additional Documentation
welcome.welcomeNormal.archive        = archives
welcome.welcomeNormal.commonActions  = Common Console Actions
welcome.welcomeNormal.deployNew      = Deploy New Applications
welcome.welcomeNormal.devMaillist    = Developers Mailing List Archive
welcome.welcomeNormal.doc            = Geronimo Documentation
welcome.welcomeNormal.faq            = FAQ
welcome.welcomeNormal.forDevelopers  = for developers working on Geronimo
welcome.welcomeNormal.forUsers       = for general questions related to configuring and using Geronimo
welcome.welcomeNormal.homePage       = The Geronimo Home Page
welcome.welcomeNormal.irc            = Geronimo IRC chat
welcome.welcomeNormal.online         = Geronimo Online
welcome.welcomeNormal.problemTracker = Problem Tracking Database
welcome.welcomeNormal.serverInfo     = Server Information
welcome.welcomeNormal.thanks         = Thanks for using Geronimo!
welcome.welcomeNormal.userMaillist   = Users Mailing List Archive
welcome.welcomeNormal.webServerPorts = Web Server Ports
welcome.welcomeNormal.wiki           = Wiki
