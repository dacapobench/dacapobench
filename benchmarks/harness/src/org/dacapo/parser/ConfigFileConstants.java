/* Generated By:JavaCC: Do not edit this line. ConfigFileConstants.java */
package org.dacapo.parser;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface ConfigFileConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int SINGLE_LINE_COMMENT = 9;
  /** RegularExpression Id. */
  int FORMAL_COMMENT = 10;
  /** RegularExpression Id. */
  int MULTI_LINE_COMMENT = 11;
  /** RegularExpression Id. */
  int ARGS = 13;
  /** RegularExpression Id. */
  int AUTHOR = 14;
  /** RegularExpression Id. */
  int BENCHMARK = 15;
  /** RegularExpression Id. */
  int BINARY = 16;
  /** RegularExpression Id. */
  int BYTES = 17;
  /** RegularExpression Id. */
  int CLASS = 18;
  /** RegularExpression Id. */
  int COPYRIGHT = 19;
  /** RegularExpression Id. */
  int DESCRIPTION = 20;
  /** RegularExpression Id. */
  int DIGEST = 21;
  /** RegularExpression Id. */
  int EXISTS = 22;
  /** RegularExpression Id. */
  int FILTER = 23;
  /** RegularExpression Id. */
  int FIXED = 24;
  /** RegularExpression Id. */
  int KEEP = 25;
  /** RegularExpression Id. */
  int JARS = 26;
  /** RegularExpression Id. */
  int LICENSE = 27;
  /** RegularExpression Id. */
  int LINES = 28;
  /** RegularExpression Id. */
  int LONG = 29;
  /** RegularExpression Id. */
  int METHOD = 30;
  /** RegularExpression Id. */
  int OUTPUT = 31;
  /** RegularExpression Id. */
  int PER_CPU = 32;
  /** RegularExpression Id. */
  int RAW = 33;
  /** RegularExpression Id. */
  int SHORT = 34;
  /** RegularExpression Id. */
  int SINGLE = 35;
  /** RegularExpression Id. */
  int SIZE = 36;
  /** RegularExpression Id. */
  int STDOUT = 37;
  /** RegularExpression Id. */
  int STDERR = 38;
  /** RegularExpression Id. */
  int TEXT = 39;
  /** RegularExpression Id. */
  int URL = 40;
  /** RegularExpression Id. */
  int VERSION = 41;
  /** RegularExpression Id. */
  int THREADS = 42;
  /** RegularExpression Id. */
  int THREAD_LIMIT = 43;
  /** RegularExpression Id. */
  int THREAD_MODEL = 44;
  /** RegularExpression Id. */
  int REPEATS = 45;
  /** RegularExpression Id. */
  int IDENT = 46;
  /** RegularExpression Id. */
  int HEX_STRING = 47;
  /** RegularExpression Id. */
  int STRING_LITERAL = 48;
  /** RegularExpression Id. */
  int INT_LITERAL = 49;
  /** RegularExpression Id. */
  int COMMA = 50;
  /** RegularExpression Id. */
  int LPAREN = 51;
  /** RegularExpression Id. */
  int RPAREN = 52;
  /** RegularExpression Id. */
  int SEMI = 53;

  /** Lexical state. */
  int DEFAULT = 0;
  /** Lexical state. */
  int IN_SINGLE_LINE_COMMENT = 1;
  /** Lexical state. */
  int IN_FORMAL_COMMENT = 2;
  /** Lexical state. */
  int IN_MULTI_LINE_COMMENT = 3;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "\"\\f\"",
    "\"//\"",
    "<token of kind 7>",
    "\"/*\"",
    "<SINGLE_LINE_COMMENT>",
    "\"*/\"",
    "\"*/\"",
    "<token of kind 12>",
    "\"args\"",
    "\"author\"",
    "\"benchmark\"",
    "\"binary\"",
    "\"bytes\"",
    "\"class\"",
    "\"copyright\"",
    "\"description\"",
    "\"digest\"",
    "\"exists\"",
    "\"filter\"",
    "\"fixed\"",
    "\"keep\"",
    "\"jars\"",
    "\"license\"",
    "\"lines\"",
    "\"long\"",
    "\"method\"",
    "\"output\"",
    "\"per_cpu\"",
    "\"raw\"",
    "\"short\"",
    "\"single\"",
    "\"size\"",
    "\"stdout\"",
    "\"stderr\"",
    "\"text\"",
    "\"url\"",
    "\"version\"",
    "\"threads\"",
    "\"thread-limit\"",
    "\"thread-model\"",
    "\"repeats\"",
    "<IDENT>",
    "<HEX_STRING>",
    "<STRING_LITERAL>",
    "<INT_LITERAL>",
    "\",\"",
    "\"(\"",
    "\")\"",
    "\";\"",
  };

}
